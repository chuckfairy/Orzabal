/**
 * Midi control
 */
#pragma once

#include <iostream>

#include <stdlib.h>
#include <inttypes.h>

#include <string>


using std::string;


namespace Orza { namespace Midi {

/**
 * Control enum
 */

enum ControlNumber {
${ORZABAL_MIDI_CONTROLS_DEFINITION}
};

const ControlNumber CONTROL_NUMBER_MIN = CONTROL_${ORZABAL_MIDI_CONTROL_MIN};
const ControlNumber CONTROL_NUMBER_MAX = CONTROL_${ORZABAL_MIDI_CONTROL_MAX};


/**
 * Value constants
 */

const uint8_t CONTROL_VALUE_MIN  = 0;
const uint8_t CONTROL_VALUE_MAX = 127;


/**
 * Midi Control port
 */

template<typename PortType>
struct ControlPort {

    PortType * port;
    const ControlNumber number;
    char * fullName;

    /**
     * Construct
     */

    ControlPort( PortType * p, const ControlNumber n ) :
        port( p ),
        number( n )
    {
    }

    /**
     * Get name / label
     */

    char * getName() {

        fullName = (char*) malloc(
            sizeof( port->nameString )
            + sizeof( number )
            + 50
        );

        sprintf( fullName, "%s:CONTROL_%i", port->nameString.c_str(), number );

        return fullName;

    };

};

}; };
